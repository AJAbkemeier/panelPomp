% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mif2d-ppomp-methods.R
\docType{methods}
\name{mif2,mif2d.ppomp-method}
\alias{mif2,mif2d.ppomp-method}
\title{IF2: Maximum likelihood by iterated, perturbed Bayes maps}
\usage{
\S4method{mif2}{mif2d.ppomp}(object, Nmif, shared.start, specific.start, Np,
  rw.sd, transform, cooling.type, cooling.fraction.50, tol, ...)
}
\arguments{
\item{object}{
    An object of class \code{pomp}.
  }

\item{Nmif}{
    The number of filtering iterations to perform.
  }

\item{shared.start}{named numerical vector; the starting guess of the shared parameters.}

\item{specific.start}{matrix with row parameter names and column 
unit names; the starting guess of the specific parameters.}

\item{Np}{
    the number of particles to use in filtering.
    This may be specified as a single positive integer, in which case the same number of particles will be used at each timestep.
    Alternatively, if one wishes the number of particles to vary across timestep, one may specify \code{Np} either as a vector of positive integers (of length \code{length(time(object))}) or as a function taking a positive integer argument.
    In the latter case, \code{Np(n)} must be a single positive integer, representing the number of particles to be used at the \code{n}-th timestep:
    \code{Np(1)} is the number of particles to use going from \code{timezero(object)} to \code{time(object)[1]},
    \code{Np(2)}, from \code{time(object)[1]} to \code{time(object)[2]},
    and so on.
    \strong{Note that this behavior differs from that of \code{\link{mif}}!}
  }

\item{rw.sd}{
    specification of the magnitude of the random-walk perturbations that will be applied to some or all model parameters.
    Parameters that are to be estimated should have positive perturbations specified here.
    The specification is given using the \code{rw.sd} function, which creates a list of unevaluated expressions.
    The latter are evaluated in a context where the model time variable is defined (as \code{time}).
    The expression \code{ivp(s)} can be used in this context as shorthand for \preformatted{ifelse(time==time[1],s,0).}
    Likewise, \code{ivp(s,lag)} is equivalent to \preformatted{ifelse(time==time[lag],s,0).}
    See below for some examples.
    The perturbations that are applied are normally distributed with the specified s.d.
    If \code{transform = TRUE}, then they are applied on the estimation scale.
  }

\item{transform}{logical; if TRUE, optimization is performed on the estimation scale (see \code{pomp} documentation).}

\item{cooling.type}{
    specifications for the cooling schedule, i.e., the manner in which the intensity of the parameter perturbations is reduced with successive filtering iterations.
    \code{cooling.type} specifies the nature of the cooling schedule.
    See below (under \dQuote{Specifying the perturbations}) for more detail.
  }

\item{cooling.fraction.50}{
    specifications for the cooling schedule, i.e., the manner in which the intensity of the parameter perturbations is reduced with successive filtering iterations.
    \code{cooling.type} specifies the nature of the cooling schedule.
    See below (under \dQuote{Specifying the perturbations}) for more detail.
  }

\item{tol}{
    passed to the particle filter.
    See the descriptions under \code{\link{pfilter}}.
  }

\item{...}{
    additional arguments that override the defaults.
  }
}
\description{
Extension to panel models of the improved iterated filtering algorithm (Ionides et al., 2015) for estimating parameters of a partially observed Markov process.
Iterated filtering algorithms rely on extending a partially observed Markov process model of interest by introducing random perturbations to the model parameters. 
The space where the original parameters live is then explored at each iteration by running a particle filter.
Convergence to a maximum likelihood estimate has been established for appropriately constructed procedures that iterate this search over the parameter space while diminishing the intensity of perturbations (Ionides et al. 2006, 2011, 2015).
}
