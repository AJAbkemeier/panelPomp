
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## basic usage:
> library(panelPomp)
Loading required package: pomp
> TESTS_PASS <- NULL 
> ## alternatively: assign(eval(formals(test))$all,NULL) (after defining test)
> ## define test function, ...
> test <- function(...,all="TESTS_PASS",env=parent.frame()) 
+   panelPomp:::test(...,all=all,env=env)
> ## ..., perform tests, and ...
> test(identical(NULL,NULL))
[1] TRUE
> ## check whether all tests passed
> all(get(eval(formals(test))$all))
[1] TRUE
> if (!all(get(eval(formals(test))$all))) stop("Not all tests passed!")
> 
> 
> 
> ## refresh <- expression({
> ##   rm(list=ls()[!(ls() %in% c('test','TESTS_PASS','refresh'))])
> ##   refreshed <- NULL
> ## })
> ## eval(refresh)
> 
> 
> 
> ## complete tests for 'test':
> ## test stop for wrong 'all'
> test_test <- function(...,all="DOESNT_EXIST",env=parent.frame()) 
+   panelPomp:::test(...,all=all,env=env)
> test(identical(
+   try(test_test(identical(NULL,NULL)),silent=TRUE)[1],sQuotes(
+     "Error : in 'test': missing vector to accumulate logical test results.\n")))
[1] TRUE
> rm(test_test)
> ## test if results are added to 'all'
> test(length(get(eval(formals(test))$all))==2)
[1] TRUE
> 
> ## final check: do all tests pass?
> all(get(eval(formals(test))$all))
[1] TRUE
> if (!all(get(eval(formals(test))$all))) stop("Not all tests passed!")
> 
