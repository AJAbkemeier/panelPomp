
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(panelPomp)
Loading required package: pomp
> 
> TESTS_PASS <- NULL
> 
> TESTS_PASS <- c(
+   TESTS_PASS,# for single word (with ')
+   sQuotes("'Error'")=="‘Error’" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for single word (no ')
+   sQuotes("Error")=="Error" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for multiple words (starting with ')
+   sQuotes("'Error' : in")=="‘Error’ : in" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for multiple words (starting without ')
+   sQuotes("Error : in 'fn'")=="Error : in ‘fn’" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for multiple ' (starting with ')
+   sQuotes(
+     "'Error' : in 'fn': 'object' is a required argument"
+   )=="‘Error’ : in ‘fn’: ‘object’ is a required argument" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for multiple ' (starting without ')
+   sQuotes("Error : in 'fn': 'object' is a required argument"
+   )=="Error : in ‘fn’: ‘object’ is a required argument" -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for multiple arguments
+   sQuotes("in 'fn'",": 'object' is"," a required argument"," Error : in",
+           " 'fn': 'object' is a required argument")==
+     paste0("in ‘fn’: ‘object’ is a required argument Error : in",
+            " ‘fn’: ‘object’ is a required argument") -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> TESTS_PASS <- c(
+   TESTS_PASS,# for use with stop()
+   as.character(
+     attr(try(stop(sQuotes("in 'fn': 'object' is a required argument")),
+              silent=TRUE),"condition"))==
+     paste0(
+       "Error in doTryCatch(return(expr), name, parentenv, handler): in ‘fn’: ",
+       "‘object’ is a required argument\n") -> PASSES#?
+ )
> PASSES#?
[1] TRUE
> 
> all(TESTS_PASS)#?
[1] TRUE
> 
