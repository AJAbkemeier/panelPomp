> # check reproducibility over a range of randomly chosen seeds
> 
> library(panelPomp,quietly=TRUE)
> 
> ppo <- pompExample(prw,envir=NULL)[[1]]
> pos <- as(ppo,"list")
> po <- pos[[1]]
> 
> seeds <- c(21125715L,81902071L,86680005L,29971689L,73376915L)
> 
> for (s in seq_along(seeds)) {
+   set.seed(seeds[s])
+   pf <- pfilter(ppo,Np=10)
+   print(unitlogLik(pf))
+   print(logLik(pf))
+ }
      rw1       rw2 
-5.989446 -8.714786 
[1] -14.70423
      rw1       rw2 
-6.427359 -8.675708 
[1] -15.10307
      rw1       rw2 
-6.922634 -7.845590 
[1] -14.76822
      rw1       rw2 
-6.391707 -9.008469 
[1] -15.40018
      rw1       rw2 
-7.189965 -8.640094 
[1] -15.83006
> 
> for (s in seq_along(seeds)) {
+   set.seed(seeds[s])
+   mf <- mif2(ppo,Np=10,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),cooling.fraction.50=0.5)
+   print(mf@pParams)
+   print(unitlogLik(mf))
+   print(logLik(mf))
+ }
$shared
   sigmaX    sigmaY 
0.9347312 1.0000000 

$specific
        unit
variable       rw1      rw2
     X.0 0.7497272 1.382096

      rw1       rw2 
-6.233398 -7.337460 
[1] -13.57086
$shared
   sigmaX    sigmaY 
0.6823591 1.0000000 

$specific
        unit
variable      rw1       rw2
     X.0 2.036246 0.7224989

      rw1       rw2 
-6.035492 -9.112446 
[1] -15.14794
$shared
   sigmaX    sigmaY 
0.9306918 1.0000000 

$specific
        unit
variable      rw1      rw2
     X.0 1.138423 1.940188

      rw1       rw2 
-6.598711 -9.563772 
[1] -16.16248
$shared
 sigmaX  sigmaY 
1.02656 1.00000 

$specific
        unit
variable       rw1       rw2
     X.0 0.3563674 0.6888846

      rw1       rw2 
-6.711310 -8.261035 
[1] -14.97235
$shared
  sigmaX   sigmaY 
1.028849 1.000000 

$specific
        unit
variable       rw1      rw2
     X.0 0.4838207 1.954455

      rw1       rw2 
-5.972903 -8.108347 
[1] -14.08125
> 
